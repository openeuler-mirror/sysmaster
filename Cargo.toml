[package]
name = "sysmaster"
version = "0.2.4"
authors = ["sysmaster"]
edition = "2021"
build = "build.rs"
rust-version = "1.60.0"

[lib]
name = "sysmaster"
path = "core/libsysmaster/lib.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[[bin]]
name = "sysmaster"
path = "core/sysmaster/main.rs"

[[bin]]
name = "sctl"
path = "core/sctl/main.rs"

[dev-dependencies.libtests]
path = "libs/libtests"


[dependencies]
# internal libraries
cgroup = { path = "libs/cgroup" }
event = { path = "libs/event" }
basic = { path = "libs/basic" }
cmdproto = { path = "libs/cmdproto" }
constants = { path = "libs/constants" }

# third libraries
bitflags = "1.3.2"
confique = { version = "0.1.3", default-features = false, features = ['toml'] }
dynamic_reload = "0.8.0"
heed = "0.11.0"
lazy_static = "1.4.0"
libc = "0.2.*"
once_cell = { version = "1.5.2" }
log = "0.4"
nix = "0.24"
regex = { version = "1.6.0", default-features = false, features = ["std"] }
serde = "1.0.130"
siphasher = { version = "0.3", features = ["serde"] }
tempfile = "=3.6.0"
walkdir = "2"
fnmatch-regex = "0.2.0"
snafu = "0.7"
clap = { version = "3.1.8", features = ["derive"] }

[features]
default = ["linux"]
hongmeng = []
linux = []

# 此为开发配置文件, 给 `cargo build` 所使用.
[profile.dev]
opt-level = 'z'
# 控制编译器构建的`--opt-level`。
# 0-1适合调试。 2是良好优化的。最大为 3。
# 's' 企图优化大小, 'z' 则 进一步优化大小.
debug = true
# (u32 or bool) 包括调试信息（调试符号）.
# 相当于 `-C debuginfo=2` 编译器 标志.
rpath = false
# 控制 编译器 是否应该设置加载器路径.
# 若为 true, 传递 `-C rpath` 标志 给 编译器.
lto = false
# 链接时间优化通常会减少二进制文件和静态库的大小
# 但会增加编译时间.
# 若是 true, 传递 `-C lto` 标志 给 编译器, 和 若是一个
# 字符串值 像 'thin' ，那会传递 `-C lto=thin`
# 给 编译器
debug-assertions = true
# 控制是否启用调试断言
# (e.g. debug_assert!() 和 算术溢出检查)
codegen-units = 128
# if > 1 并行代码生成，以改善
# 编译时间, 但阻止了些优化.
# 传递 `-C codegen-units`.
panic = 'unwind'
# 恐慌策略 (`-C panic=...`), 也可以是 'abort'
incremental = true
# 是否启用增量编译
overflow-checks = true
# 使用溢出检查进行整数运算。
# 传递 `-C overflow-checks=...`标志 给 compiler.

[profile.release]
opt-level = 3
strip = true
debug = false
rpath = false
lto = true
debug-assertions = false
codegen-units = 1
panic = 'abort'
incremental = false
overflow-checks = false

[profile.release.build-override] # +
opt-level = 3     # +
codegen-units = 1

[profile.release.package."*"]
opt-level = 3
codegen-units = 1

# for rpm dist
[profile.dist]
inherits = "release"
opt-level = 3
# for generating debuginfo
strip = false
debug = false
rpath = false
lto = true
debug-assertions = false
codegen-units = 1
panic = 'abort'
incremental = false
overflow-checks = false

[profile.test]
opt-level = 0
debug = 2
rpath = false
lto = false
debug-assertions = true
codegen-units = 16
panic = 'unwind'
incremental = true
overflow-checks = true

[profile.bench]
opt-level = 3
debug = false
rpath = false
lto = false
debug-assertions = false
codegen-units = 16
panic = 'unwind'
incremental = false
overflow-checks = false

[workspace]
members = [
  # sysmaster-init
  "init",
  # external binaries
  "exts/fstab",
  "exts/random_seed",
  "exts/rc-local-generator",
  "exts/sysmonitor",
  "exts/devmaster",
  "exts/switch_root",
  "exts/hostname_setup",
  #internal libraries crates
  "libs/cmdproto",
  #external libraries crates
  "libs/cgroup",
  "libs/event",
  "libs/basic",
  "libs/libtests",
  "libs/watchdog",
  "libs/device",
  "libs/blkid_rs",
  "libs/kmod_rs",
  #components crates
  "coms/service",
  "coms/socket",
  "coms/target",
  "coms/mount",
]
exclude = ["config", "tools"]

# fix https://github.com/mdaffin/loopdev/issues/65
[patch.crates-io.loopdev]
git = 'https://gitee.com/overweight/loopdev'
branch = 'bump-bindgen-reduce-version'
