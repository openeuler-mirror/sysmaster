fail_fast: true
repos:
  - repo: "https://github.com/pre-commit/pre-commit-hooks.git"
    rev: v4.4.0
    hooks:
      - id: check-byte-order-marker
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-toml
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: trailing-whitespace
      - id: detect-private-key
  #      - id: check-executables-have-shebangs
      # - id: check-shebang-scripts-are-executable
  - repo: "https://github.com/codespell-project/codespell.git"
    rev: v2.2.2
    hooks:
      - id: codespell
        args: [-I, ci/codespell_ignore_words]
        verbose: true
  # - repo: "https://github.com/psf/black.git"
  #   rev: 22.8.0
  #   hooks:
  #     - id: black
  # - repo: https://github.com/jumanjihouse/pre-commit-hooks
  #   rev: master  # or specific git tag
  #   hooks:
  #     - id: bundler-audit
  #     # - id: check-mailmap
  #     - id: fasterer
  #     # - id: forbid-binary
  #     # - id: forbid-space-in-indent
  #     - id: git-check  # Configure in .gitattributes
  #     - id: git-dirty  # Configure in .gitignore
  #     - id: markdownlint # Configure in .mdlrc
  #     - id: reek
  #     # - id: require-ascii
  #     - id: rubocop
  #     - id: script-must-have-extension
  #     # - id: script-must-not-have-extension
  #     - id: shellcheck
  #     - id: shfmt

  - repo: local
    hooks:
      - id: cargo-override-set
        name: cargo-override-set
        description: unset override.
        entry: bash -c 'rustup override set stable || true'
        language: rust
        pass_filenames: false
        files: \.(rs|toml)$
        verbose: true
      - id: cargo-clippy
        name: cargo clippy
        description: Lint rust sources
        entry: bash -c 'RUSTC_WRAPPER="" cargo clippy -vvv --all-targets --features "default" --all -- -Dwarnings'
        language: rust
        pass_filenames: false
        files: \.rs$
        verbose: true
      - id: commit-msg
        name: commit-msg
        description: use commit-msg for commit.
        entry: bash -c '\cp -ar ci/commit-msg .git/hooks/'
        language: system
        pass_filenames: false
        verbose: true
      - id: cargo-fmt
        name: cargo fmt
        description: Format files with rustfmt.
        entry: bash -c 'cargo fmt -v --all -- --check -v'
        language: rust
        pass_filenames: false
        files: \.rs$
        verbose: true
      - id: cargo-fix
        name: cargo fix
        description: Check the package for errors.
        entry: bash -c 'cargo fix -v --broken-code --all-targets --all --allow-dirty --allow-staged'
        language: rust
        pass_filenames: false
        files: \.rs$
        verbose: true
      - id: cargo-build
        name: cargo build
        description: build the package for errors.
        entry: bash -c 'cargo build --all --features "default" -v'
        language: rust
        pass_filenames: false
        files: \.(rs|toml)$
        verbose: true
      - id: cargo-test
        name: cargo test
        description: test the package for errors.
        entry: bash -c 'RUST_BACKTRACE=full cargo test --all-targets --all -v -- --nocapture --show-output --test-threads=1'
        language: rust
        pass_filenames: false
        files: \.(rs|toml)$
        verbose: true
      - id: cargo-override-unset
        name: cargo-override-unset
        description: unset override.
        entry: bash -c 'rustup override unset || true'
        language: rust
        pass_filenames: false
        files: \.(rs|toml)$
        verbose: true

#      - id: cargo-deny
#        name: cargo deny check
#        description: Check cargo depencencies
#        entry: bash -c 'cargo deny check'
#        language: rust
#        files: \.rs$
#        args: []
